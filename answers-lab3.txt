

1. What is the purpose of having an individual handler function for each exception/interrupt? (i.e., if all exceptions/interrupts were delivered to the same handler, what feature that exists in the current implementation could not be provided?)

The error codes for the trap cannot be captured by the kernel.


2. Did you have to do anything to make the user/softint program behave correctly? The grade script expects it to produce a general protection fault (trap 13), but softint’s code says int $14. Why should this produce interrupt vector 13? What happens if the kernel actually allows softint’s int $14 instruction to invoke the kernel’s page fault handler (which is interrupt vector 14)?

If user can run a command of "triggering page fault", the kernel will solve it and return to the exact %eip of user text. Then the PGFLT will be triggered again and again.
The interrupt instruction cannot call ring 0 trap handlers by user mode. If so, the kernel triggered general protection fault. ( T_GPFLT )
